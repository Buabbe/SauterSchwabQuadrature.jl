using CompScienceMeshes
export k31
export k32

function k3_1(η1, η2, η3, ξ)

	η1 = cartesian(η1)[1]
	η2 = cartesian(η2)[1]
	η3 = cartesian(η3)[1]
	ξ =  cartesian(ξ)[1]

	(ξ^3)*((η1)^2)*(η2)*(

	kernel1(χ(ξ, ξ-ξ*η1+ξ*η1*η2), χ(ξ-ξ*η1*η2*η3, ξ-ξ*η1)) +

	kernel1(χ(ξ-ξ*η1*η2*η3, ξ-ξ*η1), χ(ξ, ξ-ξ*η1+ξ*η1*η2)) +

	kernel1(χ(ξ, ξ*η1*(1-η2+η2*η3)), χ(ξ-ξ*η1*η2, ξ*η1*(1-η2))) +

	kernel1(χ(ξ-ξ*η1*η2, ξ*η1*(1-η2)), χ(ξ, ξ*η1*(1-η2+η2*η3))) +

	kernel1(χ(ξ-ξ*η1*η2*η3, ξ*η1*(1-η2*η3)), χ(ξ, ξ*η1*(1-η2))) +

	kernel1(χ(ξ, ξ*η1*(1-η2)), χ(ξ-ξ*η1*η2*η3, ξ*η1*(1-η2*η3)))

	)
end

function k3_2(η1, η2, η3, ξ)

	η1 = cartesian(η1)[1]
	η2 = cartesian(η2)[1]
	η3 = cartesian(η3)[1]
	ξ =  cartesian(ξ)[1]

	(ξ^3)*((η1)^2)*(η2)*(

	kernel2(χ(ξ, ξ-ξ*η1+ξ*η1*η2), χ(ξ-ξ*η1*η2*η3, ξ-ξ*η1)) +

	kernel2(χ(ξ-ξ*η1*η2*η3, ξ-ξ*η1), χ(ξ, ξ-ξ*η1+ξ*η1*η2)) +

	kernel2(χ(ξ, ξ*η1*(1-η2+η2*η3)), χ(ξ-ξ*η1*η2, ξ*η1*(1-η2))) +

	kernel2(χ(ξ-ξ*η1*η2, ξ*η1*(1-η2)), χ(ξ, ξ*η1*(1-η2+η2*η3))) +

	kernel2(χ(ξ-ξ*η1*η2*η3, ξ*η1*(1-η2*η3)), χ(ξ, ξ*η1*(1-η2))) +

	kernel2(χ(ξ, ξ*η1*(1-η2)), χ(ξ-ξ*η1*η2*η3, ξ*η1*(1-η2*η3)))

	)
end
